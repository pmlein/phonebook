{"version":3,"sources":["components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","_this","this","react_default","a","createElement","props","persons","map","person","key","_id","name","number","onClick","deletePerson","React","Component","Notification","_ref","message","className","baseUrl","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","del","window","confirm","delete","res","console","log","catch","err","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newPersons","state","filter","p","personService","setState","nameExists","newN","found","length","addPerson","event","preventDefault","personObject","newName","newPhone","existsId","newPerson","msg","setTimeout","handleNameChange","target","value","handlePhoneChange","handleFilterChange","filterFind","filterPersons","showAll","bind","assertThisInitialized","_this2","_this3","personsToShow","startsWith","components_Notification","onSubmit","onChange","type","components_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5a4ec6f5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n  /* Arrow function did not work here (delete person was problem) */\r\nclass Persons extends React.Component  {\r\n  render() {\r\n    return (\r\n    <ul>      \r\n        {this.props.persons.map(person => \r\n        <li key={person._id}>{person.name} {person.number} \r\n          <button \r\n          onClick={this.props.deletePerson(person._id, person.name)}>Poista</button>\r\n        </li> \r\n      )}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n  \r\n  export default Persons","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    } else {\r\n    return (\r\n      <div className=\"msg\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n /*   const nonExisting = {\r\n        id: 10000,\r\n        content: 'Tätä muistiinpanoa ei ole palvelimelta',\r\n        date: '2017-12-10T17:30:31.098Z',\r\n        important: true\r\n      } */\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(baseUrl+`/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id, name) => {\r\n    if (window.confirm(`Do you really want to delete ${name}?`)) {      \r\n        const request = axios.delete(baseUrl+`/${id}`)\r\n        return request.then(res => {\r\n            console.log('Poisto ')\r\n        })\r\n        .catch(err => {\r\n        console.log(err);\r\n        });\r\n    } // if\r\n}\r\n\r\nexport default { getAll, create, update, del}\r\n","import React from 'react'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nimport './index.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      newName: '',\n      newPhone: '',\n      showAll: true,\n      filterFind: '',\n      msg: null\n    }\n    this.deletePerson = this.deletePerson.bind(this);\n  }\n\n\n  deletePerson = (id, name) => {\n    return () => {\n      const newPersons = this.state.persons.filter(p => p.id !== id)\n      console.log('deletePerson funktiossa: ' , newPersons)\n      console.log('ID: ' , id)\n      personService\n        .del(id, name)\n        .then(newPersons => { \n           const persons = this.state.persons.filter(p => p.id !== id) \n            this.setState({\n                persons: persons\n        })\n      })\n      personService\n      .getAll()\n      .then(response => {\n        this.setState({ persons: response })\n      })\n      /*.catch(error => {\n        alert(`Person '${name}' on jo valitettavasti poistettu palvelimelta`)\n      }) */\n    }\n  } \n\n  /*\n   Checks that name does not exist in phone book\n  */\n  nameExists = (newN) => {    \n    let found = this.state.persons.filter(p => p.name === newN)\n    if (found.length > 0) {\n      return found[0]._id\n    } else {\n      return null\n    } \n  }\n\n  componentDidMount() {\n    personService\n      .getAll()\n      .then(response => {\n        this.setState({ persons: response })\n      })\n  }\n\n\n\n  \n  addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: this.state.newName,\n      number: this.state.newPhone\n    }\n    // Added if name does not exist\n    //if (!this.nameExists(this.state.newName)) {\n      let existsId = this.nameExists(this.state.newName)\n      if (existsId === null) {\n      personService\n        .create(personObject)\n        .then(newPerson => {\n          this.setState({\n            persons: this.state.persons.concat(newPerson),\n            newName: '',\n            newPhone: '',\n            msg: \"Henkilö lisätty!\"\n          })\n          setTimeout(() => {\n            this.setState({msg: null})\n          }, 5000)\n        })\n    } \n    else {\n      if (window.confirm(`Nimi ${this.state.newName} on jo luettelossa, korvataanko numero?`)) {\n        personService\n          .update(existsId,personObject)\n          .then(newPerson => {\n            this.setState({\n              \n              \n              newName: '',\n              newPhone: ''\n\n            })\n          personService\n          .getAll()\n          .then(response => {\n            this.setState({ persons: response })\n          })\n\n          \n          }) \n      }\n    }\n  }\n\n\n  handleNameChange = (event) => {\n    this.setState({ newName: event.target.value })\n  }\n  handlePhoneChange = (event) => {\n    this.setState({ newPhone: event.target.value })\n  }\n  handleFilterChange = (event) => {\n    this.setState({ filterFind: event.target.value })\n  }\n\n  filterPersons = (event) => {\n    event.preventDefault()\n    if (!(this.state.filterFind==='')) {\n      this.setState({\n        showAll: false\n      })\n    } \n    else {\n      this.setState({\n        showAll: true,\n        filterFind: ''\n      })\n    } \n  }\n  render() {\n\n    const personsToShow =\n    this.state.showAll ?\n      this.state.persons :\n      this.state.persons.filter(p => (p.name.startsWith(this.state.filterFind)))\n\n    return (\n      <div>\n        <h2>Puhelinluettelo</h2>\n\n          <Notification message={this.state.msg}/>\n       \n\n        <form onSubmit={this.filterPersons}>\n           Rajaa näytettäviä: <input \n                value={this.state.filterFind}\n                onChange={this.handleFilterChange}\n              />\n        </form>\n         <h3>Lisää uusi yhteystieto</h3>\n        <form onSubmit={this.addPerson}>\n          <div>\n            Nimi: <input\n                value={this.state.newName}\n                onChange={this.handleNameChange}\n          />\n          </div>\n          <div>\n            Puhelin: <input \n                value={this.state.newPhone}\n                onChange={this.handlePhoneChange}\n          />\n          </div>         \n          <div>\n            <button type=\"submit\">lisää</button>\n          </div>\n        </form>\n        <h2>Numerot</h2>\n        <Persons persons={personsToShow} \n            deletePerson={this.deletePerson} />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}